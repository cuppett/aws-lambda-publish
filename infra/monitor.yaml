AWSTemplateFormatVersion: '2010-09-09'
Description: "Optional monitor stack that watches pipeline/codedeploy executions and updates DynamoDB"
Parameters:
  TableName:
    Type: String
  ScheduleExpression:
    Type: String
    Default: rate(5 minutes)
Resources:
  MonitorFunctionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Path: /
      Policies:
        - PolicyName: MonitorInline
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:Query
                  - dynamodb:UpdateItem
                Resource: !Sub arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${TableName}
              - Effect: Allow
                Action:
                  - sts:AssumeRole
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: "*"
  MonitorFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: lambda-publish-monitor
      Runtime: python3.12
      Handler: lambda_handler.handler
      Role: !GetAtt MonitorFunctionRole.Arn
      Timeout: 300
      Code:
        ZipFile: |
          def handler(event, context):
            print("Deploy monitor code separately; placeholder")
  ScheduleRule:
    Type: AWS::Events::Rule
    Properties:
      ScheduleExpression: !Ref ScheduleExpression
      Targets:
        - Arn: !GetAtt MonitorFunction.Arn
          Id: Monitor
  PermissionForEventsToInvokeMonitor:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref MonitorFunction
      Action: lambda:InvokeFunction
      Principal: events.amazonaws.com
      SourceArn: !GetAtt ScheduleRule.Arn
Outputs:
  MonitorFunctionName:
    Value: !Ref MonitorFunction
