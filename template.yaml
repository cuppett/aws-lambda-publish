AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: SAM template for aws-lambda-publish
Globals:
  Function:
    Timeout: 120
    Runtime: python3.13
    MemorySize: 512
    Environment:
      Variables:
        TABLE_NAME: ImageTagSubscriptions
        DEFAULT_MODE: direct
        DEFAULT_UPDATE_STRATEGY: publish-and-alias
        MAX_PARALLEL_TARGETS: 10
        LOG_LEVEL: INFO
        METRICS_NAMESPACE: LambdaPublish
        ASSUME_ROLE_SESSION_NAME: lambda-publish
        SCAN_SEVERITY_THRESHOLD: HIGH

Resources:
  ControllerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: lambda-publish-controller
      Handler: src.controller.lambda_handler.handler
      CodeUri: .
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ImageTagSubscriptions
        - Statement:
            - Effect: Allow
              Action:
                - ecr:DescribeImages
                - ecr:DescribeImageScanFindings
              Resource: '*'
            - Effect: Allow
              Action:
                - lambda:GetFunctionConfiguration
                - lambda:UpdateFunctionCode
                - lambda:PublishVersion
                - lambda:UpdateAlias
                - lambda:CreateAlias
              Resource: '*'
            - Effect: Allow
              Action:
                - codepipeline:StartPipelineExecution
                - codepipeline:GetPipelineExecution
                - codepipeline:GetPipelineState
                - codedeploy:GetDeployment
                - codedeploy:ListDeployments
                - sts:AssumeRole
              Resource: '*'
            - Effect: Allow
              Action:
                - ssm:PutParameter
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
                - ssm:DeleteParameter
              Resource: 
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lambda-publish/*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'

  VulnerabilityCheckFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: lambda-publish-vulnerability-check
      Handler: src.vulnerability_check.lambda_handler.handler
      CodeUri: .
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - logs:CreateLogGroup
                - logs:CreateLogStream
                - logs:PutLogEvents
              Resource: '*'

  EcrScanOrchestrator:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: lambda-publish-orchestrator
      DefinitionUri: infra/state-machine.asl.json
      DefinitionSubstitutions:
        ControllerFunction: !Ref ControllerFunction
        VulnerabilityCheckFunction: !Ref VulnerabilityCheckFunction
      Policies:
        - Statement:
            - Effect: Allow
              Action:
                - ecr:DescribeImageScanFindings
              Resource: '*'
            - Effect: Allow
              Action:
                - lambda:InvokeFunction
              Resource: 
                - !GetAtt ControllerFunction.Arn
                - !GetAtt VulnerabilityCheckFunction.Arn
      Events:
        EcrPush:
          Type: EventBridgeRule
          Properties:
            Pattern:
              source:
                - aws.ecr
              detail-type:
                - 'ECR Image Action'
              detail:
                action-type:
                  - PUSH
            InputTransformer:
              InputPathsMap:
                detail: $.detail
              InputTemplate: |
                {
                  "detail": "<detail>",
                  "threshold": "${ScanSeverityThreshold}"
                }

  ImageTagSubscriptionsTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: ImageTagSubscriptions
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

  MonitorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: lambda-publish-monitor
      Handler: src.monitor.lambda_handler.handler
      CodeUri: .
      Policies:
        - DynamoDBCrudPolicy:
            TableName: ImageTagSubscriptions
        - Statement:
            - Effect: Allow
              Action:
                - codepipeline:GetPipelineExecution
                - codepipeline:GetPipelineState
                - codedeploy:GetDeployment
                - codedeploy:ListDeployments
                - sts:AssumeRole
              Resource: '*'
            - Effect: Allow
              Action:
                - cloudwatch:PutMetricData
              Resource: '*'
            - Effect: Allow
              Action:
                - ssm:GetParameter
                - ssm:GetParameters
                - ssm:GetParametersByPath
              Resource: 
                - !Sub 'arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/lambda-publish/*'
      Events:
        ScheduleRule:
          Type: Schedule
          Properties:
            Schedule: rate(5 minutes)
            Name: monitor-pipeline-status

Parameters:
  ScanSeverityThreshold:
    Type: String
    Default: HIGH
    Description: ECR scan severity threshold (INFORMATIONAL, LOW, MEDIUM, HIGH, CRITICAL)
    AllowedValues:
      - INFORMATIONAL
      - LOW
      - MEDIUM
      - HIGH
      - CRITICAL

Outputs:
  ControllerFunctionName:
    Value: !Ref ControllerFunction
  TableName:
    Value: !Ref ImageTagSubscriptionsTable
  StateMachineArn:
    Value: !Ref EcrScanOrchestrator
